--- sys/netinet6/nd6.c.orig	2010-12-10 18:37:54.000000000 +0300
+++ sys/netinet6/nd6.c	2011-03-01 20:18:44.000000000 +0300
@@ -442,6 +442,8 @@
 	struct in6_addr *dst;
 	struct ifnet *ifp;
 	struct nd_ifinfo *ndi = NULL;
+	struct rt_addrinfo rtinfo;
+	struct sockaddr_dl gateway;
 
 	KASSERT(arg != NULL, ("%s: arg NULL", __func__));
 	ln = (struct llentry *)arg;
@@ -512,6 +514,15 @@
 	case ND6_LLINFO_STALE:
 		/* Garbage Collection(RFC 2461 5.3) */
 		if (!ND6_LLINFO_PERMANENT(ln)) {
+			bzero(&gateway, sizeof(gateway));
+			gateway.sdl_len = sizeof(struct sockaddr_dl);
+			gateway.sdl_family = AF_LINK;
+			gateway.sdl_alen = 6;
+			bzero(&rtinfo, sizeof(struct rt_addrinfo));
+			rtinfo.rti_info[0] = (struct sockaddr*)L3_ADDR(ln);
+			rtinfo.rti_info[1] = (struct sockaddr*)&gateway;
+			rtinfo.rti_addrs = RTA_DST | RTA_GATEWAY;
+			rt_missmsg(RTM_DELETE, &rtinfo, RTF_HOST | RTF_LLDATA, 0);
 			(void)nd6_free(ln, 1);
 			ln = NULL;
 		}
@@ -539,6 +550,15 @@
 			nd6_ns_output(ifp, dst, dst, ln, 0);
 			LLE_WLOCK(ln);
 		} else {
+			bzero(&gateway, sizeof(gateway));
+			gateway.sdl_len = sizeof(struct sockaddr_dl);
+			gateway.sdl_family = AF_LINK;
+			gateway.sdl_alen = 6;
+			bzero(&rtinfo, sizeof(struct rt_addrinfo));
+			rtinfo.rti_info[0] = (struct sockaddr*)L3_ADDR(ln);
+			rtinfo.rti_info[1] = (struct sockaddr*)&gateway;
+			rtinfo.rti_addrs = RTA_DST | RTA_GATEWAY;
+			rt_missmsg(RTM_DELETE, &rtinfo, RTF_HOST | RTF_LLDATA, 0);
 			(void)nd6_free(ln, 0);
 			ln = NULL;
 		}
 
--- sys/netinet6/nd6_nbr.c.orig	2011-04-18 16:18:27.000000000 +0400
+++ sys/netinet6/nd6_nbr.c	2011-06-03 21:20:06.000000000 +0400
@@ -51,6 +51,7 @@
 #include <sys/syslog.h>
 #include <sys/queue.h>
 #include <sys/callout.h>
+#include <sys/endian.h>
 
 #include <net/if.h>
 #include <net/if_types.h>
@@ -617,6 +618,9 @@
 	struct mbuf *chain = NULL;
 	struct sockaddr_in6 sin6;
 	char ip6bufs[INET6_ADDRSTRLEN], ip6bufd[INET6_ADDRSTRLEN];
+	struct rt_addrinfo rtinfo;
+	struct sockaddr_in6 dst;
+	struct sockaddr_dl gateway;
 
 	if (ip6->ip6_hlim != 255) {
 		nd6log((LOG_ERR,
@@ -863,6 +867,25 @@
 		}
 		ln->ln_router = is_router;
 	}
+	
+	if (ln->ln_state == ND6_LLINFO_REACHABLE) {
+		if(!IN6_IS_ADDR_LINKLOCAL(&taddr6) && !IN6_IS_ADDR_MC_LINKLOCAL(&taddr6) && ln->ll_addr.mac_aligned != 0) {
+		    bzero(&dst, sizeof(struct sockaddr_in6));
+		    dst.sin6_len = sizeof(struct sockaddr_in6);
+		    dst.sin6_family = AF_INET6;
+		    bcopy(&taddr6, &dst.sin6_addr, sizeof(struct in6_addr));
+		    bzero(&gateway, sizeof(gateway));
+		    gateway.sdl_len = sizeof(struct sockaddr_dl);
+		    gateway.sdl_family = AF_LINK;
+		    gateway.sdl_alen = 6;
+		    bcopy(&ln->ll_addr, gateway.sdl_data, 6);
+		    bzero(&rtinfo, sizeof(struct rt_addrinfo));
+		    rtinfo.rti_info[0] = (struct sockaddr*)&dst;
+		    rtinfo.rti_info[1] = (struct sockaddr*)&gateway;
+		    rtinfo.rti_addrs = RTA_DST | RTA_GATEWAY;
+		    rt_missmsg(RTM_ADD, &rtinfo, RTF_UP | RTF_HOST | RTF_LLDATA, 0);
+		}
+	}
         /* XXX - QL
 	 *  Does this matter?
 	 *  rt->rt_flags &= ~RTF_REJECT;
